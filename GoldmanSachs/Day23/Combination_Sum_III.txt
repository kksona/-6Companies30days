class Solution {
    private:
    void dfs(int k, int n,int currNum, int currSum, vector<int>&temp, vector<vector<int>>&ans){
        if(k==0&&currSum==n){
            ans.push_back(temp);
            return;
        }
        if(k==0||currSum+currNum>n||currNum>9){
            return;
        }
        //take it
        temp.push_back(currNum);
        dfs(k-1,n,currNum+1,currSum+currNum,temp,ans);
        temp.pop_back();
        //not take it
        dfs(k,n,currNum+1,currSum,temp,ans);
    }
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        if(n>45)return ans;
        vector<int> temp;
        dfs(k,n,1,0,temp,ans);
        return ans;
    }
};
